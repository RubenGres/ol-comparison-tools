ol.control.ComparisonTool=class extends ol.control.Bar{constructor(e){e||(e={}),super({...e,group:!0,toggleOne:!0,className:e.className,controls:[]});let t=this;this.controls_=[],this.clonedMap_,this.clonedLayer_,this.rightLayer_,this.leftLayer_,this.useCloneLayer_=!1,this.layerGroup_,this.vSwipeControl_,this.hSwipeControl_;let r=e.controlNames||["hSlider","vSlider","scope","clipLayer","doubleMap"];e.rightLayer&&(this.rightLayer_=e.rightLayer),e.leftLayer&&(this.leftLayer_=e.leftLayer),e.layerGroup&&(this.layerGroup_=e.layerGroup),this.useCloneLayer_=!0===e.useCloneLayer&&e.useCloneLayer;for(let e=0;e<r.length;e++){let a=r[e];if("vSlider"===a){let e=new ol.control.Toggle({html:'<i class="fa fa-arrows-v"></i>',className:"vertical-button",title:"Comparaison verticale",active:!1});e.set("name",a+"Toggle"),e.on("change:active",function(e){t.onVerticalControlChange_(e,t)}),this.addControl(e)}else if("hSlider"===a){let e=new ol.control.Toggle({html:'<i class="fa fa-arrows-h"></i>',className:"horizontal-button",title:"Comparaison horizontale",active:!1});e.set("name",a+"Toggle"),e.on("change:active",function(e){t.onHorizontalControlChange_(e,t)}),this.addControl(e)}else if("scope"===a){let e=new ol.control.Toggle({html:'<i class="fa fa-circle-o"></i>',className:"scope-button",name:"scope",title:"Loupe",active:!1});e.set("name",a+"Toggle"),e.on("change:active",function(e){t.onScopeControlChange_(e,t)}),this.addControl(e)}else if("clipLayer"===a){let e=new ol.control.Toggle({html:'<i class="fa fa-eye"></i>',className:"clipLayer-button",title:"Masquer",active:!1});e.set("name",a+"Toggle"),e.on("change:active",function(e){t.onClipLayerControlChange_(e,t)}),this.addControl(e)}else if("doubleMap"===a){let e=new ol.control.Toggle({html:'<i class="fa fa-pause"></i>',className:"doubleMap-button",name:"doubleMap",title:"Double affichage",active:!1});e.set("name",a+"Toggle"),e.on("change:active",function(e){t.onDoubleMapControlChange_(e,t)}),this.addControl(e)}}}setMap(e){if(super.setMap(e),this.layerGroup_||(this.layerGroup_=this.getMap().getLayerGroup()),this.getControl("doubleMapToggle")){let t=e.getViewport().parentElement,r=t.id;if(void 0===r)throw new EvalError("ol.Map div must have an id.");let a=document.createElement("div");a.id=r+"-cloned",a.hidden=!0,t.parentElement.appendChild(a),e.clonedMap_=new ol.Map({target:a,view:e.getView(),controls:[new ol.control.Zoom({zoomInTipLabel:"Zoom avant",zoomOutTipLabel:"Zoom arri√®re"}),new ol.control.Rotate,new ol.control.Attribution]}),e.addInteraction(new ol.interaction.Synchronize({maps:[e.clonedMap_]})),e.clonedMap_.addInteraction(new ol.interaction.Synchronize({maps:[e]}))}}getControl(e){for(let t=0;t<this.getControls().length;t++)if(this.getControls()[t].get("name")===e)return this.getControls()[t]}onVerticalControlChange_(e){e.active?(this.vSwipeControl_=new ol.control.Swipe({layers:this.getLeftLayer(),rightLayers:this.getRightLayer(),orientation:"vertical"}),this.vSwipeControl_.set("name","vSlider"),this.getMap().addControl(this.vSwipeControl_)):this.vSwipeControl_&&(this.getMap().removeControl(this.vSwipeControl_),this.vSwipeControl_=void 0)}onHorizontalControlChange_(e){e.active?(this.hSwipeControl_=new ol.control.Swipe({layers:this.getLeftLayer(),rightLayers:this.getRightLayer(),orientation:"horizontal"}),this.hSwipeControl_.set("name","hSlider"),this.getMap().addControl(this.hSwipeControl_)):this.hSwipeControl_&&(this.getMap().removeControl(this.hSwipeControl_),this.hSwipeControl_=void 0)}onScopeControlChange_(e){let t=this.getControl("scopeToggle");e.active?(t.setInteraction(new ol.interaction.Clip({radius:200})),this.getMap().addInteraction(t.getInteraction()),t.getInteraction().addLayer(this.getRightLayer())):t.getInteraction()&&(t.getInteraction().removeLayer(this.getRightLayer()),this.getMap().removeInteraction(t.getInteraction()),t.setInteraction())}onClipLayerControlChange_(e){let t=this.getControl("clipLayerToggle");e.active?(this.getRightLayer().setVisible(!1),t.element.getElementsByClassName("fa")[0].className="fa fa-eye-slash"):(this.useCloneLayer_?"doubleMap"!==this.getDisplayMode()&&this.getRightLayer().setVisible(!0):this.getRightLayer().setVisible(!0),t.element.getElementsByClassName("fa")[0].className="fa fa-eye")}onDoubleMapControlChange_(e){let t=this.getMap().getViewport().parentElement,r=this.getMap().clonedMap_.getViewport().parentElement;e.active?(r.style.float="left",r.style.width="50%",t.style.width="50%",t.style.float="left",r.style.display="block",r.style.height=t.clientHeight+"px",this.useCloneLayer_?(this.clonedLayer_=new ol.layer.Tile(this.getRightLayer().getProperties()),this.clonedLayer_.setVisible(!0),this.getRightLayer().setVisible(!1),this.getRightLayer().on("change",this.updateClonedLayer_,this),this.getClonedMap().addLayer(this.clonedLayer_)):(this.getRightLayer().setVisible(!0),this.layerGroup_.getLayers().remove(this.getRightLayer()),this.getClonedMap().addLayer(this.getRightLayer())),this.getMap().updateSize(),this.getClonedMap().updateSize()):(r.style.display="none",r.style.width="100%",t.style.width="100%",this.useCloneLayer_?(this.getClonedMap().removeLayer(this.clonedLayer_),"clipLayer"!==this.getDisplayMode()&&this.getRightLayer().setVisible(!0),this.getRightLayer().un("change",this.updateClonedLayer_,this)):("clipLayer"!==this.getDisplayMode()&&this.getRightLayer().setVisible(!0),this.getClonedMap().removeLayer(this.getRightLayer()),this.layerGroup_.getLayers().push(this.getRightLayer()))),this.getMap().updateSize()}setDisplayMode(e){if(!this.getMap())throw new EvalError("control must be added to map before setting displayMode.");"vSlider"===e?this.getControl("vSliderToggle").setActive(!0):"hSlider"===e?this.getControl("hSliderToggle").setActive(!0):"scope"===e?this.getControl("scopeToggle").setActive(!0):"clipLayer"===e?this.getControl("clipLayerToggle").setActive(!0):"doubleMap"===e&&this.getControl("doubleMapToggle").setActive(!0)}getDisplayMode(){for(let e=0;e<this.getControls().length;e++)if(this.getControls()[e].getActive())return this.getControls()[e].get("name").substring(0,this.getControls()[e].get("name").length-6);return"normal"}setRightLayer(e){if(!this.getMap())throw new EvalError("control must be added to map before setting rightLayer.");if("vSlider"===this.getDisplayMode()){let t;this.getMap().getControls().forEach(function(e){"vSlider"===e.get("name")&&(t=e)}),t.removeLayer(this.getRightLayer()),t.addLayer(e,!0)}else if("hSlider"===this.getDisplayMode()){let t;this.getMap().getControls().forEach(function(e){"hSlider"===e.get("name")&&(t=e)}),t.removeLayer(this.getRightLayer()),t.addLayer(e,!0)}else if("clipLayer"===this.getDisplayMode())e.setVisible(this.getRightLayer().getVisible());else if("scope"===this.getDisplayMode()){let t=this.getControl("scopeToggle").getInteraction();t.removeLayer(this.getRightLayer()),t.addLayer(e)}else if("doubleMap"===this.getDisplayMode())if(this.useCloneLayer_)this.clonedLayer_.setProperties(e.getProperties()),this.getRightLayer().on("change",this.updateClonedLayer_,this),this.getRightLayer().setVisible(!1);else{this.getRightLayer().setVisible(!0),this.layerGroup_.getLayers().remove(e);let t=this;this.getClonedMap().getLayers().forEach(function(r,a){r===t.getRightLayer()&&t.getClonedMap().getLayers().setAt(a,e)})}this.rightLayer_=e}updateClonedLayer_(){this.clonedLayer_.setProperties(this.getRightLayer().getProperties()),this.clonedLayer_.setVisible(!0)}setLeftLayer(e){if(!this.getMap())throw new EvalError("control must be added to map before setting leftLayer.");if("vSlider"===this.getDisplayMode()){let e;this.getMap().getControls().forEach(function(t){"vSlider"===t.get("name")&&(e=t)}),e&&e.addLayer(this.getLeftLayer())}else if("hSlider"===this.getDisplayMode()){let e;this.getMap().getControls().forEach(function(t){"hSlider"===t.get("name")&&(e=t)}),e&&e.addLayer(this.getLeftLayer())}else if("clipLayer"===this.getDisplayMode())e.setVisible(this.getLeftLayer().getVisible());else if("scope"===this.getDisplayMode());else if("doubleMap"===this.getDisplayMode()){let t=this;this.getMap().getLayers().forEach(function(r,a){r===t.getLeftLayer()&&t.getMap().getLayers().setAt(a,e)})}this.leftLayer_=e}getRightLayer(){return this.rightLayer_}getLeftLayer(){return this.leftLayer_}getClonedMap(){return this.getMap().clonedMap_}setLayerGroup(e){this.layerGroup_=e}getLayerGroup(){return this.layerGroup_}getVSwipeControl(){return this.vSwipeControl_}getHSwipeControl(){return this.hSwipeControl_}},ol.control.HistogramMatching=class extends ol.control.Toggle{constructor(e){e||(e={}),super({...e,html:'<i class="fa fa-bar-chart"></i>',className:"ol-histogram-matching",title:"Adaptation d'histogramme",active:!1}),this.layer1_=e.layer1,this.layer2_=e.layer2,this.classCount_=e.classCount?e.classCount:1e3,this.layerProcessed_={},this.active_=!1}setMap(e){ol.control.Control.prototype.setMap.call(this,e),this.on("change:active",this.onToggle_)}onToggle_(e){let t=this;if(!0===t.getActive()){let e=new ol.source.Raster({sources:[t.layer1_.getSource(),t.layer2_.getSource()],operationType:"image",operation:t.rasterOperation_,lib:{computeHistogram:t.computeHistogram_,getInverseClassIndex:t.getInverseClassIndex_,getInverseValue:t.getInverseValue_,classCount:t.classCount_}});t.layerProcessed_=new ol.layer.Image({source:e,name:"processedLayer"}),t.getMap().addLayer(t.layerProcessed_),t.getMap().on("moveend",function(){e.changed()})}else t.getMap().removeLayer(t.layerProcessed_),t.getMap().render()}rasterOperation_(e,t){let r=e[0],a=e[1],o=computeHistogram(a),i=computeHistogram(r);if(0===i.count||void 0===o||0===o.count)return{data:r.data,width:r.width,height:r.height};let l=r.width,s=r.height,n=r.data,h=new Uint8ClampedArray(n.length);for(let e=0,t=0;e<s;++e){for(let e=0;e<l;++e,t+=4){let e=n[t],r=n[t+1],a=n[t+2],l=(n[t+3],t);h[l]=getInverseValue(i.cumulative_red[Math.round(Math.max(0,Math.min(255,e)))],o.inverse_red),h[l+1]=getInverseValue(i.cumulative_green[Math.round(Math.max(0,Math.min(255,r)))],o.inverse_green),h[l+2]=getInverseValue(i.cumulative_blue[Math.round(Math.max(0,Math.min(255,a)))],o.inverse_blue),h[l+3]=255}}return{data:h,width:l,height:s}}setLayer1(e){this.layer1_=e}setLayer2(e){this.layer2_=e}getInverseClassIndex_(e){let t=Math.floor(e*classCount);return t=Math.max(0,Math.min(t,classCount-1))}getInverseValue_(e,t){if(null==t)throw"inverse values cannot be undefined";let r=getInverseClassIndex(e);if(null==t[r]){let e=r-1;for(;e>=0&&null==t[e];)e--;e<0&&(e=null);let a=r+1;for(;a<classCount&&null==t[a];)a++;if(a>=classCount&&(a=null),null==e)for(let e=0;e<a;e++)t[e]=t[a];else if(null==a)for(let r=e+1;r<classCount;r++)t[r]=t[e];else for(let r=e+1;r<a;r++){let o=(r-e)/(a-e);t[r]=(1-o)*t[e]+o*t[a]}}return t[r]}computeHistogram_(e){let t={red:new Array(256),cumulative_red:new Array(256),inverse_red:new Array(classCount),green:new Array(256),cumulative_green:new Array(256),inverse_green:new Array(classCount),blue:new Array(256),cumulative_blue:new Array(256),inverse_blue:new Array(classCount),count:0};for(let e=0;e<256;e++)t.red[e]=t.green[e]=t.blue[e]=0;let r=e.data,a=e.width,o=e.height;for(let e=0,i=0;e<o;++e){for(let e=0;e<a;++e,i+=4)t.red[r[i]]+=1,t.green[r[i+1]]+=1,t.blue[r[i+2]]+=1,t.count++}if(t.count<1e-4)throw"Cannot compute cumulative histogram. Count is quite zero...";t.cumulative_red[0]=t.red[0]/t.count,t.cumulative_green[0]=t.green[0]/t.count,t.cumulative_blue[0]=t.blue[0]/t.count;for(let e=1;e<256;e++)t.cumulative_red[e]=t.cumulative_red[e-1]+t.red[e]/t.count,t.cumulative_green[e]=t.cumulative_green[e-1]+t.green[e]/t.count,t.cumulative_blue[e]=t.cumulative_blue[e-1]+t.blue[e]/t.count;for(let e=0;e<classCount;e++)t.inverse_red[e]=t.inverse_green[e]=t.inverse_blue[e]=null;for(let e=0;e<255;e++)t.inverse_red[getInverseClassIndex(t.cumulative_red[e])]=e,t.inverse_green[getInverseClassIndex(t.cumulative_green[e])]=e,t.inverse_blue[getInverseClassIndex(t.cumulative_blue[e])]=e;return t}getLayerProcessed(){return this.layerProcessed_}};